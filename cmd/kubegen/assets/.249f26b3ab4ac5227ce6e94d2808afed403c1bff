
---
#
# Generated from module
#	Name: "sockshop"
#	SourceDir: ".examples/modules/sockshop"
#	manifestPath: ".examples/modules/sockshop/cart.yml"
#

apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: /prometheus
    labels:
      name: cart
    name: cart
  spec:
    ports:
    - name: http
      port: 80
      targetPort: http
    selector:
      name: cart
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: cart-db
    name: cart-db
  spec:
    ports:
    - name: mongo
      port: 27017
      targetPort: mongo
    selector:
      name: cart-db
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: cart
    name: cart
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: cart
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: cart
      spec:
        containers:
        - image: docker.io/weaveworksdemos/cart:0.4.0
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 300
            periodSeconds: 3
          name: cart
          ports:
          - containerPort: 80
            name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 180
            periodSeconds: 3
          resources: {}
          securityContext: {}
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: cart-db
    name: cart-db
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: cart-db
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: cart-db
      spec:
        containers:
        - image: mongo
          name: cart-db
          ports:
          - containerPort: 27017
            name: mongo
          resources: {}
          securityContext: {}
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
kind: List

---
#
# Generated from module
#	Name: "sockshop"
#	SourceDir: ".examples/modules/sockshop"
#	manifestPath: ".examples/modules/sockshop/catalogue.yml"
#

apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: catalogue
    name: catalogue
  spec:
    ports:
    - name: http
      port: 80
      targetPort: http
    selector:
      name: catalogue
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: catalogue-db
    name: catalogue-db
  spec:
    ports:
    - name: mysql
      port: 3306
      targetPort: mysql
    selector:
      name: catalogue-db
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: catalogue
    name: catalogue
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: catalogue
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: catalogue
      spec:
        containers:
        - env:
          - name: ZIPKIN
            value: http://zipkin:9411/api/v1/spans
          image: docker.io/weaveworksdemos/catalogue:0.3.0
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 300
            periodSeconds: 3
          name: catalogue
          ports:
          - containerPort: 80
            name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 180
            periodSeconds: 3
          resources: {}
          securityContext: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: catalogue-db
    name: catalogue-db
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: catalogue-db
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: catalogue-db
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: socksdb
          - name: MYSQL_ROOT_PASSWORD
            value: fake_password
          image: docker.io/weaveworksdemos/catalogue-db:0.3.0
          name: catalogue-db
          ports:
          - containerPort: 3306
            name: mysql
          resources: {}
kind: List

---
#
# Generated from module
#	Name: "sockshop"
#	SourceDir: ".examples/modules/sockshop"
#	manifestPath: ".examples/modules/sockshop/front-end.yml"
#

apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: front-end
    name: front-end
  spec:
    ports:
    - nodePort: 30001
      port: 80
      targetPort: http
    selector:
      name: front-end
    type: NodePort
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: front-end
    name: front-end
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: front-end
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: front-end
      spec:
        containers:
        - image: docker.io/weaveworksdemos/front-end:0.3.1
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 300
            periodSeconds: 3
          name: front-end
          ports:
          - containerPort: 8079
            name: http
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 180
            periodSeconds: 3
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext: {}
kind: List

---
#
# Generated from module
#	Name: "sockshop"
#	SourceDir: ".examples/modules/sockshop"
#	manifestPath: ".examples/modules/sockshop/orders.yml"
#

apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: /prometheus
    labels:
      name: orders
    name: orders
  spec:
    ports:
    - name: http
      port: 80
      targetPort: http
    selector:
      name: orders
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: orders-db
    name: orders-db
  spec:
    ports:
    - name: mongo
      port: 27017
      targetPort: mongo
    selector:
      name: orders-db
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: orders
    name: orders
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: orders
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: orders
      spec:
        containers:
        - image: docker.io/weaveworksdemos/orders:0.4.2
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 300
            periodSeconds: 3
          name: orders
          ports:
          - containerPort: 80
            name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 180
            periodSeconds: 3
          resources: {}
          securityContext: {}
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: orders-db
    name: orders-db
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: orders-db
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: orders-db
      spec:
        containers:
        - image: mongo
          name: orders-db
          ports:
          - containerPort: 27017
            name: mongo
          resources: {}
          securityContext: {}
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
kind: List

---
#
# Generated from module
#	Name: "sockshop"
#	SourceDir: ".examples/modules/sockshop"
#	manifestPath: ".examples/modules/sockshop/payment.yml"
#

apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: payment
    name: payment
  spec:
    ports:
    - name: http
      port: 80
      targetPort: http
    selector:
      name: payment
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: payment
    name: payment
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: payment
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: payment
      spec:
        containers:
        - env:
          - name: ZIPKIN
            value: http://zipkin:9411/api/v1/spans
          image: docker.io/weaveworksdemos/payment:0.4.1
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 300
            periodSeconds: 3
          name: payment
          ports:
          - containerPort: 80
            name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 180
            periodSeconds: 3
          resources: {}
          securityContext: {}
kind: List

---
#
# Generated from module
#	Name: "sockshop"
#	SourceDir: ".examples/modules/sockshop"
#	manifestPath: ".examples/modules/sockshop/rabbitmq.yml"
#

apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: rabbitmq
    name: rabbitmq
  spec:
    ports:
    - name: rabbitmq
      port: 5672
      targetPort: rabbitmq
    selector:
      name: rabbitmq
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: /prometheus
    labels:
      name: queue-master
    name: queue-master
  spec:
    ports:
    - name: http
      port: 80
      targetPort: http
    selector:
      name: queue-master
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: rabbitmq
    name: rabbitmq
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: rabbitmq
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: rabbitmq
      spec:
        containers:
        - image: rabbitmq:3
          name: rabbitmq
          ports:
          - containerPort: 5672
            name: rabbitmq
          resources: {}
          securityContext: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: queue-master
    name: queue-master
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: queue-master
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: queue-master
      spec:
        containers:
        - image: docker.io/weaveworksdemos/queue-master:0.3.0
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 300
            periodSeconds: 3
          name: queue-master
          ports:
          - containerPort: 80
            name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 180
            periodSeconds: 3
          resources: {}
kind: List

---
#
# Generated from module
#	Name: "sockshop"
#	SourceDir: ".examples/modules/sockshop"
#	manifestPath: ".examples/modules/sockshop/shipping.yml"
#

apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: /prometheus
    labels:
      name: shipping
    name: shipping
  spec:
    ports:
    - name: http
      port: 80
      targetPort: http
    selector:
      name: shipping
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: shipping
    name: shipping
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: shipping
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: shipping
      spec:
        containers:
        - image: docker.io/weaveworksdemos/shipping:0.4.0
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 300
            periodSeconds: 3
          name: shipping
          ports:
          - containerPort: 80
            name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 180
            periodSeconds: 3
          resources: {}
          securityContext: {}
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
kind: List

---
#
# Generated from module
#	Name: "sockshop"
#	SourceDir: ".examples/modules/sockshop"
#	manifestPath: ".examples/modules/sockshop/user.yml"
#

apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: user
    name: user
  spec:
    ports:
    - name: http
      port: 80
      targetPort: http
    selector:
      name: user
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: user-db
    name: user-db
  spec:
    ports:
    - name: mongo
      port: 27017
      targetPort: mongo
    selector:
      name: user-db
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: user
    name: user
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: user
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: user
      spec:
        containers:
        - env:
          - name: MONGO_HOST
            value: user-db:27017
          - name: ZIPKIN
            value: http://zipkin:9411/api/v1/spans
          image: docker.io/weaveworksdemos/user:0.4.0
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 300
            periodSeconds: 3
          name: user
          ports:
          - containerPort: 80
            name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 180
            periodSeconds: 3
          resources: {}
          securityContext: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: user-db
    name: user-db
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: user-db
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: user-db
      spec:
        containers:
        - image: docker.io/weaveworksdemos/user-db:0.3.0
          name: user-db
          ports:
          - containerPort: 27017
            name: mongo
          resources: {}
          securityContext: {}
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
kind: List

---
#
# Generated from module
#	Name: "sockshop"
#	SourceDir: ".examples/modules/sockshop"
#	manifestPath: ".examples/modules/sockshop/zipkin.yml"
#

apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: zipkin
    name: zipkin
  spec:
    ports:
    - name: zipkin
      nodePort: 30002
      port: 9411
      targetPort: zipkin
    selector:
      name: zipkin
    type: NodePort
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: zipkin-mysql
    name: zipkin-mysql
  spec:
    ports:
    - name: mysql
      port: 3306
      targetPort: mysql
    selector:
      name: zipkin-mysql
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: zipkin
    name: zipkin
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: zipkin
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: zipkin
      spec:
        containers:
        - env:
          - name: MYSQL_HOST
            value: zipkin-mysql
          - name: STORAGE_TYPE
            value: mysql
          image: openzipkin/zipkin
          name: zipkin
          ports:
          - containerPort: 9411
            name: zipkin
          resources: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: zipkin-mysql
    name: zipkin-mysql
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: zipkin-mysql
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: zipkin-mysql
      spec:
        containers:
        - image: openzipkin/zipkin-mysql:1.20.0
          name: zipkin-mysql
          ports:
          - containerPort: 3306
            name: mysql
          resources: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: zipkin-cron
    name: zipkin-cron
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: zipkin-cron
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: zipkin-cron
      spec:
        containers:
        - args:
          - -f
          command:
          - crond
          env:
          - name: MYSQL_HOST
            value: zipkin-mysql
          - name: MYSQL_PASS
            value: zipkin
          - name: MYSQL_USER
            value: zipkin
          - name: STORAGE_TYPE
            value: mysql
          image: openzipkin/zipkin-dependencies:1.4.0
          name: zipkin-cron
          resources: {}
kind: List

